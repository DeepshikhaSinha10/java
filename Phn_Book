


//CREATION OF A PHONE BOOK MINI PROJECT
import java.io.*;

class Phn_Book
{
public static void main(String[] args) throws IOException
{
String[][] cont_list = new String[100][2];
BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
int opt,count = 0;
String ser_cont;
do
{
System.out.println();
System.out.println();
System.out.println("1.ADD NEW CONTACTS");
System.out.println("2.LIST CONTACTS");
System.out.println("3.SEARCH CONTACTS");
System.out.println("4.MODIFY CONTACTS");
System.out.println("5.DELETE CONTACTS");
System.out.println("6.EXIT");

System.out.println("ENTER THE REQUISITE OPERATION NO.:");
opt = Integer.parseInt(rd.readLine());

switch(opt)
{
case 1:

//ADD NEW CONTACTS
String continu = "y";
do
{

count = traverse(cont_list);

System.out.print("ENTER THE NAME OF THE CONTACT: ");
cont_list[count][0]= rd.readLine();

System.out.print("ENTER THE NUMBER OF THE CONTACT: ");
cont_list[count][1]= rd.readLine();

System.out.print("PRESS Y TO CONTINUE AND ANY OTHER KEY TO QUIT: ");
continu = rd.readLine();

}while(continu.compareToIgnoreCase("y")==0); 

break;

case 2:
//LIST CONTACTS
count = traverse(cont_list);
System.out.printf("\n\n%30s%30s","NAME","CONTACT NUMBER\n\n");
for(int row =0;row<count;row++)
{
for(int col =0;col<2;col++)
System.out.printf("%30s",cont_list[row][col]);
System.out.println();
}
break;

case 3:
//SEARCH CONTACTS

System.out.print("ENTER THE CONTACT TO BE SEARCHED: ");
ser_cont = rd.readLine();

count = search(ser_cont,cont_list);
if(count != -1)
{
System.out.println("\n\nRESULT OF THE CONTACT SEARCH:");
System.out.println("NAME: "+cont_list[count][0]);
System.out.println("NUMBER: "+cont_list[count][1]);
}
break;

case 4:
//MODIFY CONTACTS

System.out.print("ENTER THE CONTACT TO BE MODIFIED: ");
ser_cont = rd.readLine();

count = search(ser_cont,cont_list);
if(count != -1)
{
System.out.print("ENTER MODIFIED NAME: ");
cont_list[count][0]= rd.readLine();
System.out.print("ENTER MODIFIED NUMBER: ");
cont_list[count][1]= rd.readLine();
System.out.println("\n\nRESULT OF THE CONTACT MODIFICATION:");
System.out.println("NAME: "+cont_list[count][0]);
System.out.println("NUMBER: "+cont_list[count][1]);
}
break;

case 5:
//DELETE CONTACTS

System.out.print("ENTER THE CONTACT TO BE DELETED: ");
ser_cont = rd.readLine();

int ttlcount=traverse(cont_list);
count = search(ser_cont,cont_list);

if(count != -1)
{
int row,col;
for(row=count;row<ttlcount;row++)
for(col=0;col<2;col++)
{
cont_list[row][col]=cont_list[row+1][col];
}
}
break;

case 6:
//EXIT
System.out.println("YOU HAVE CHOOSEN TO QUIT THE APPLICATION, SEE YOU NEXT TIME");
break;

default:
System.out.println("YOUR CHOISE IS INVALID, RE-ENTER YOUR CHOISE:\n ");
}
}while(opt != 6);
}

//METHOD FOR COUNTING NUMBER OF CONTACTS IN THE CONTACT LIST
static int traverse(String cont1_list[][])
{
int row,col,cont = 0;
String nul = null;
for(row=0; row<100; row++)
{
for(col=0; col<2; col++)
{
nul=cont1_list[row][col];
if(nul == null)
break;
}
if(nul == null)
break;
cont++;
}
return(cont);
}

static int search(String ser1_cont,String cont1_list[][])
{
int cont,row=0;
cont = traverse(cont1_list);

while((row<cont) && (cont1_list[row][0].compareToIgnoreCase(ser1_cont)!=0))
row++;

if(row == cont)
{
System.out.println("NO SUCH RECORDS FOUND");
return(-1);
}
else
return(row);

}
}
